name: basic-steps

on:
  workflow_call:

jobs:

  build-and-check:
    runs-on: ubuntu-latest

    env:
      gradle_cmd: "./gradlew --parallel --console=plain --no-watch-fs -s "
      is_pull_request: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: find
        uses: actions/github-script@v6
        id: find-comment
        with:
          script: |
            var comm = github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            var a = await comm
            var comments = a.data.filter(it => it.body.startsWith('Image Tag:'))
            if (comments.length > 0) {
              console.log(`FOUND COMMENT: ${comments[0].id} ${comments[0].body}`)
              return `${comments[0].id}`
            } else {
              console.log('Comment not FOUND')
              return ''
            }

      - name: update
        uses: actions/github-script@v6
        if: ${{ steps.find-comment.outputs.result }}
        with:
          script: |
            var comm = github.rest.issues.updateComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.find-comment.outputs.result }},
              body: `Image Tag: ${Date()} [updated]`
            });

      - name: create
        uses: actions/github-script@v6
        if: ${{ !steps.find-comment.outputs.result }}
        with:
          script: |
            var comm = github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Image Tag: [created] ${Date()}`
            });     

#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '11'
#          cache: gradle
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build & Test
#        run: |
#          echo "name=${{ github.event_name }} is PR: ${{ github.event_name == 'pull_request' }}"
#          echo "GITHUB_BASE_REF=refs/remotes/origin/$GITHUB_BASE_REF"
##          ${gradle_cmd} check :koverXmlReport --rerun -m


#      - name: Add test results to PR
#        uses: EnricoMi/publish-unit-test-result-action@v2.7.0
#        if: ${{ github.event_name == 'pull_request' }}
#        continue-on-error: true
#        with:
#          files:
#            '**/tests-artifacts/**/test-results/**/*.xml'
#
#      - name: Run Delta Coverage check
#        if: ${{ env.is_pull_request }}
#        continue-on-error: ${{ contains(github.event.pull_request.labels.*.name, 'suppress-delta-coverage') }}
#        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF" -x test -x functionalTest

#      - name: Add Delta Coverage report to PR
#        id: coverage-in-PR
#        uses: madrapps/jacoco-report@v1.6.1
#        if: ${{ github.event_name == 'pull_request' }}
#        continue-on-error: true
#        with:
#          paths:
#            'build/reports/coverage-reports/delta-coverage/report.xml'
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          file: build/reports/kover/report.xml
