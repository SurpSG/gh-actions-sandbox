name: basic-steps

on:
  workflow_call:

jobs:

  build-and-check:
    runs-on: ubuntu-latest

    env:
      gradle_cmd: "./gradlew --parallel --console=plain --no-watch-fs -s "
      is_pull_request: github.event_name == 'pull_request'

    steps:
      - name: pr
        if: ${{ github.event.pull_request }}
        run: echo 'pull_request'

      - name: wc
        if: ${{ github.event.workflow_call }}
        run: echo 'workflow_call'

      - name: aaa
        run: echo '${{ toJSON(github.event) }}'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build Marker
        id: comment-marker
        shell: bash
        run: echo 'result=${{ format('<!-- marker={0},{1} -->', 'title', 'body') }}' >> $GITHUB_OUTPUT

      - id: message
        uses: actions/github-script@v6
        with:
          script: |
            const summaryBuffer = core.summary
            .addHeading('Title')
            .addRaw('additional msg')
            .addCodeBlock('aza')
            .addRaw('${{ steps.comment-marker.outputs.result }}')
            
            summaryBuffer.write() // write to summary
            
            return summaryBuffer.stringify() // generate text
            

      - name: find
        uses: actions/github-script@v6
        id: find-comment
        with:
          script: |
            var response = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            var comment = response.data.find(it => 
              it.body.includes('${{ steps.comment-marker.outputs.result }}')
            )
            if (comment) {
              console.log(`FOUND COMMENT: ${comment.id} ${comment.id}`);
              return comment.id
            }

      - name: update
        uses: actions/github-script@v6
        if: ${{ steps.find-comment.outputs.result }}
        with:
          script: |
            var comm = github.rest.issues.updateComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.find-comment.outputs.result }},
              body: ${{ steps.message.outputs.result }}
            });

      - name: create
        uses: actions/github-script@v6
        if: ${{ !steps.find-comment.outputs.result }}
        with:
          script: |
            var comm = github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.message.outputs.result }}
            });     

